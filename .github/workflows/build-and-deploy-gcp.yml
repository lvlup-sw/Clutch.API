name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: clutch-api
  GAR_LOCATION: us-east4
  REPOSITORY: clutch-artifacts
  SERVICE: clutch-api
  REGION: us-east4

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Buildkit
        uses: docker/setup-buildx-action@v3
  
      - name: Populate .env
        run: |
          cat <<EOF > .env
          ConnectionStrings__ClutchAPI=${{ secrets.DB_CONNECTIONSTRING }}
          AppSettings__GithubPAT=${{ secrets.GH_PAT }}
          AppSettings__DockerPAT=${{ secrets.DOCKER_PAT }}
          EOF

      - name: Deployment Path and Tag
        run: |
          echo "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and Push
        run: |
          cd src/
          docker buildx bake --set "*.tags=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" --push -f docker-compose.yml

      - name: Authenticate with Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
#      - run: |
#          gcloud auth configure-docker us-east4-docker.pkg.dev
#      - uses: google-github-actions/setup-gcloud@v2
  
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          # NOTE: You can also set env variables here:
          #  env_vars: |
          #  NODE_ENV=production
          #  TOKEN_EXPIRE=6400

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
